{"title":"D. Cleaning the Phone","contestId":"1475","problemIndex":"D","timeLimit":"1 second","memLimit":"256 megabytes","inputFormat":"standard input","outputFormat":"standard output","problemHtml":"<p>Polycarp often uses his smartphone. He has already installed $$$n$$$ applications on it. Application with number $$$i$$$ takes up $$$a_i$$$ units of memory.</p><p>Polycarp wants to free at least $$$m$$$ units of memory (by removing some applications).</p><p>Of course, some applications are more important to Polycarp than others. He came up with the following scoring system&#xA0;&#x2014; he assigned an integer $$$b_i$$$ to each application: </p><ul> <li> $$$b_i = 1$$$&#xA0;&#x2014; regular application; </li><li> $$$b_i = 2$$$&#xA0;&#x2014; important application. </li></ul><p></p><p>According to this rating system, his phone has $$$b_1 + b_2 + \\ldots + b_n$$$ convenience points.</p><p>Polycarp believes that if he removes applications with numbers $$$i_1, i_2, \\ldots, i_k$$$, then he will free $$$a_{i_1} + a_{i_2} + \\ldots + a_{i_k}$$$ units of memory and lose $$$b_{i_1} + b_{i_2} + \\ldots + b_{i_k}$$$ convenience points.</p><p>For example, if $$$n=5$$$, $$$m=7$$$, $$$a=[5, 3, 2, 1, 4]$$$, $$$b=[2, 1, 1, 2, 1]$$$, then Polycarp can uninstall the following application sets (not all options are listed below): </p><ul> <li> applications with numbers $$$1, 4$$$ and $$$5$$$. In this case, it will free $$$a_1+a_4+a_5=10$$$ units of memory and lose $$$b_1+b_4+b_5=5$$$ convenience points; </li><li> applications with numbers $$$1$$$ and $$$3$$$. In this case, it will free $$$a_1+a_3=7$$$ units of memory and lose $$$b_1+b_3=3$$$ convenience points. </li><li> applications with numbers $$$2$$$ and $$$5$$$. In this case, it will free $$$a_2+a_5=7$$$ memory units and lose $$$b_2+b_5=2$$$ convenience points. </li></ul><p></p><p>Help Polycarp, choose a set of applications, such that if removing them will free at least $$$m$$$ units of memory and lose the minimum number of convenience points, or indicate that such a set does not exist.</p>","inSpecsHtml":"<div class=\"section-title\">Input</div><p>The first line contains one integer $$$t$$$ ($$$1 \\le t \\le 10^4$$$)&#xA0;&#x2014; the number of test cases. Then $$$t$$$ test cases follow.</p><p>The first line of each test case contains two integers $$$n$$$ and $$$m$$$ ($$$1 \\le n \\le 2 \\cdot 10^5$$$, $$$1 \\le m \\le 10^9$$$)&#xA0;&#x2014; the number of applications on Polycarp&apos;s phone and the number of memory units to be freed.</p><p>The second line of each test case contains $$$n$$$ integers $$$a_1, a_2, \\ldots, a_n$$$ ($$$1 \\le a_i \\le 10^9$$$)&#xA0;&#x2014; the number of memory units used by applications.</p><p>The third line of each test case contains $$$n$$$ integers $$$b_1, b_2, \\ldots, b_n$$$ ($$$1 \\le b_i \\le 2$$$)&#xA0;&#x2014; the convenience points of each application.</p><p>It is guaranteed that the sum of $$$n$$$ over all test cases does not exceed $$$2 \\cdot 10^5$$$.</p>","outSpecsHtml":"<div class=\"section-title\">Output</div><p>For each test case, output on a separate line: </p><ul> <li> <span class=\"tex-font-style-tt\">-1</span>, if there is no set of applications, removing which will free at least $$$m$$$ units of memory; </li><li> the minimum number of convenience points that Polycarp will lose if such a set exists. </li></ul><p></p>","noteHtml":"<div class=\"section-title\">Note</div><p>In the first test case, it is optimal to remove applications with numbers $$$2$$$ and $$$5$$$, freeing $$$7$$$ units of memory. $$$b_2+b_5=2$$$.</p><p>In the second test case, by removing the only application, Polycarp will be able to clear only $$$2$$$ of memory units out of the $$$3$$$ needed.</p><p>In the third test case, it is optimal to remove applications with numbers $$$1$$$, $$$2$$$, $$$3$$$ and $$$4$$$, freeing $$$10$$$ units of memory. $$$b_1+b_2+b_3+b_4=6$$$.</p><p>In the fourth test case, it is optimal to remove applications with numbers $$$1$$$, $$$3$$$ and $$$4$$$, freeing $$$12$$$ units of memory. $$$b_1+b_3+b_4=4$$$.</p><p>In the fifth test case, it is optimal to remove applications with numbers $$$1$$$ and $$$2$$$, freeing $$$5$$$ units of memory. $$$b_1+b_2=3$$$.</p>","sampleTestcases":[{"id":1611636398679,"input":"5\n5 7\n5 3 2 1 4\n2 1 1 2 1\n1 3\n2\n1\n5 10\n2 3 2 3 2\n1 2 1 2 1\n4 10\n5 1 3 4\n1 2 1 2\n4 5\n3 2 1 2\n2 1 2 1","output":"2\n-1\n6\n4\n3\n","result":{"id":1611636398679,"stdout":"2\r\n-1\r\n6\r\n4\r\n3\r\n","stderr":"","exitcode":0,"signal":null,"time":17,"timeout":false}}],"submitUrl":"https://codeforces.com/contest/1475/submit","language":"c++","langId":"54"}